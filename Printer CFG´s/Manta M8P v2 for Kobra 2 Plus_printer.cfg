
# This file contains common pin mappings for the BIGTREETECH Manta M8P V2.0 for an Anycubic Kobra 2 Plus Printer
# To use this config, the firmware should be compiled for the
# STM32H723 with a "128KiB bootloader" "25 MHz crystal"
# and "USB (on PA11/PA12)", "CAN bus (on PD0/PD1)" or Serial (on USART1 PA10/PA9).
# Do not forget to Rename this file to "printer.cfg"

[include mainsail.cfg]

# Motor1
[stepper_x]
step_pin: PE6
dir_pin: PE5
enable_pin: !PC14
microsteps: 16
rotation_distance: 31.904
endstop_pin: ^PF4
position_endstop: -5.0
position_max : 330.0
position_min : -5
homing_speed : 60.000000
second_homing_speed : 15.000000
homing_retract_dist : 10

# Motor2
[stepper_y]
step_pin: PE2
dir_pin: PE1
enable_pin: !PE4
microsteps: 16
rotation_distance: 31.904
endstop_pin: ^PF3
position_endstop : -5.000000
position_max : 330.000000
position_min : -5
homing_speed : 60.000000
second_homing_speed : 15.000000
homing_retract_dist : 10


# Motor3
[stepper_z]
step_pin: PB8
dir_pin: !PB7
enable_pin: !PE0
microsteps: 16
rotation_distance: 7.9968
endstop_pin: ^PF2
position_endstop : 1.080000
position_max : 401.000000
position_min : -5
homing_speed : 32.000000
homing_retract_dist : 8
second_homing_speed : 4.000000

# Motor4
# The M8P only has 4 heater outputs which leaves an extra stepper
# This can be used for a second Z stepper, dual_carriage, extruder co-stepper,
# or other accesory such as an MMU
[extruder]
step_pin: PB4
dir_pin: PB3
enable_pin: !PB6
heater_pin: PA0 # HE0
sensor_pin: PB0 # T0
microsteps : 16
rotation_distance: 6.304
nozzle_diameter : 0.600000
filament_diameter : 1.750000
sensor_type : Generic 3950  #EPCOS 100K B57560G104F
#control : pid
#pid_Kp : 12.723368
#pid_Ki : 0.489360
#pid_Kd : 82.701890
min_temp : 0
max_temp : 275
pressure_advance : 0.030000

# Motor5
#[extruder]
#step_pin: PG13
#dir_pin: PG12
#enable_pin: !PG15
#microsteps: 16
#rotation_distance: 33.500
#nozzle_diameter: 0.4
#filament_diameter: 1.75
#heater_pin: PA0 # HE0
#sensor_pin: PB0 # T0
#sensor_type: Generic 3950
#control: pid
#pid_Kp: 22.2
#pid_Ki: 1.08
#pid_Kd: 114
#min_temp: 0
#max_temp: 250

## End-Stop 5
#[filament_switch_sensor material_0]
#switch_pin: PF0

## Motor6
#[extruder1]
#step_pin: PG9
#dir_pin: PD7
#enable_pin: !PG11 
#heater_pin: PA1 # HE1 
#sensor_pin: PC5 # T1
#...

## End-Stop 6
#[filament_switch_sensor material_1]
#switch_pin: PC15

## Motor7
#[extruder2]
#step_pin: PD4
#dir_pin: PD3
#enable_pin: !PD6
#heater_pin: PA3 # HE2
#sensor_pin: PC4 # T2
#...

## Motor8
#[extruder3]
#step_pin: PC7
#dir_pin: PC8
#enable_pin: !PD2
#heater_pin: PA5 # HE3
#sensor_pin: PA7 # T3
#...

[heater_bed]
heater_pin: PF5
sensor_pin: PB1 # TB 
sensor_type: ATC Semitec 104GT-2
#control: pid
#pid_Kp : 70.769227
#pid_Ki : 1.134122
#pid_Kd : 1103.999942
min_temp: 0
max_temp: 95

#[fan_generic soc-fan]
#pin: host:gpio79  #CB1
#pin: host:gpio26  #CM4

# Fan0
[fan]
pin: PF7

# Fan1
[heater_fan hotend_cooling_fan]
pin: PF9
heater_temp : 50
fan_speed : 1

# Fan2
[controller_fan board_cooling_fan]
pin : PF6
stepper : stepper_x,stepper_y,stepper_z,extruder
fan_speed : 1
idle_speed : 0
idle_timeout : 30
heater : extruder,heater_bed


## Fan3
#[heater_fan fan3]
#pin: PF8

## Fan4
#[heater_fan fan4]
#pin: PA4

## Fan5
#[heater_fan fan5]
#pin: PA6
#tachometer_pin: PC2

## Fan6
#[heater_fan fan6]
#pin: PA2
#tachometer_pin: PC1

[mcu]
canbus_uuid: 9c85f75f7f1b

[printer]
kinematics: cartesian
max_velocity: 500
max_accel: 10000
max_z_velocity: 16
max_z_accel: 3000
square_corner_velocity : 15.000000

########################################
# TMC2209 configuration
########################################

# Motor1
[tmc2209 stepper_x]
uart_pin: PC13
#diag_pin: PF4 
interpolate : 1
sense_resistor : 0.075
driver_sgthrs : 100
run_current : 1.4
hold_current : 0.7
stealthchop_threshold : 999999


# Motor2
[tmc2209 stepper_y]
uart_pin: PE3
#diag_pin: PF3
interpolate : 1
run_current : 1.8
hold_current : 1.0
sense_resistor : 0.075
driver_sgthrs : 105
run_current: 0.800
stealthchop_threshold: 999999

## Motor3
[tmc2209 stepper_z]
uart_pin: PB9
#diag_pin: PF2
interpolate : 1
run_current : 1.8
hold_current : 1.0
uart_address : 1
sense_resistor : 0.075
driver_sgthrs : 100
stealthchop_threshold : 99999

# Motor4
[tmc2209 extruder]
uart_pin: PB5
#diag_pin: PF1
interpolate : 1
run_current : 0.8
hold_current : 0.4
uart_address : 2
sense_resistor : 0.075
driver_sgthrs : 10
stealthchop_threshold : 99999
## Motor5
#[tmc2209 extruder]
#uart_pin: PG14
#run_current: 0.800
#stealthchop_threshold: 999999

## Motor6
#[tmc2209 extruder1]
#uart_pin: PG10
#run_current: 0.800
#stealthchop_threshold: 999999

## Motor7
#[tmc2209 extruder2]
#uart_pin: PD5
#run_current: 0.800
#stealthchop_threshold: 999999

## Motor8
#[tmc2209 extruder3]
#uart_pin: PC6
#run_current: 0.800
#stealthchop_threshold: 999999


[filament_switch_sensor filament_sensor]
switch_pin: !?? #! or not?
runout_gcode: PAUSE
insert_gcode: RESUME
# 
# pause_on_runout: True  # When set to True, a PAUSE will execute immediately after a runout is detected. Note that if pause_on_runout is False and the runout_gcode is omitted then runout detection is disabled. Default is True.
# runout_gcode:  # A list of G-Code commands to execute after a filament runout is detected. See docs/Command_Templates.md for G-Code format. If pause_on_runout is set to True this G-Code will run after the PAUSE is complete. The default is not to run any G-Code commands.
# insert_gcode:  # A list of G-Code commands to execute after a filament insert is detected. See docs/Command_Templates.md for G-Code format. The default is not to run any G-Code commands, which disables insert detection.
# event_delay: 3.0  # The minimum amount of time in seconds to delay between events. Events triggered during this time period will be silently ignored. The default is 3 seconds.
# pause_delay: 0.5  # The amount of time to delay, in seconds, between the pause command dispatch and execution of the runout_gcode. It may be useful to increase this delay if OctoPrint exhibits strange pause behavior. Default is 0.5 seconds.

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PE7, EXP1_2=PG1,
    EXP1_3=PG0, EXP1_4=PF15,
    EXP1_5=PF14, EXP1_6=PF13,    # Slot in the socket on this side
    EXP1_7=PF12, EXP1_8=PF11,
    EXP1_9=<GND>, EXP1_10=<5V>,

    # EXP2 header
    EXP2_1=PE13, EXP2_2=PE12,
    EXP2_3=PE15, EXP2_4=PE11,
    EXP2_5=PE10, EXP2_6=PE14,      # Slot in the socket on this side
    EXP2_7=PE8, EXP2_8=<RST>,
    EXP2_9=<GND>, EXP2_10=<NC>

# See the sample-lcd.cfg file for definitions of common LCD displays.
[safe_z_home]
home_xy_position : 0, 0  #If z-offset switch is being used as z-limit switch at the K2 Pro (and I *guess* also at the K2 Plus): 56, 238.5 # Values are different at the K2 Max, because the z-offset sensor is at the right hand side! 
speed : 150
z_hop : 5
z_hop_speed : 8.0


[probe]
pin : PA8
x_offset : 23
y_offset : 13
#z_offset : 4.0
speed : 2.0
lift_speed : 2.0
samples : 5
sample_retract_dist : 5
samples_result : average
samples_tolerance : 0.05
samples_tolerance_retries : 5


[bed_mesh] # adjust settings to what fits your needs
speed : 60.0
horizontal_move_z : 5
mesh_min : 19, 19
mesh_max : 205,210
probe_count : 7,7
mesh_pps : 3,3
algorithm : bicubic
zero_reference_position: 87, 97 #should be the same location where PROBE_CALIBRATE and Z_ENDSTOP_CALIBRATION (if using an extra z-min limit switch) is performed


[resonance_tester] # Using the stock LIS2DW accel chips given at the printhead's PCB and the bed.
probe_points : 115,115,50 # Center of the PRO's bed - adjust settings accordingly if you're using the PLUS or MAX.
accel_chip_x : lis2dw X
accel_chip_y : lis2dw Y
min_freq : 1.0  # Minimum frequency to test for resonances. The default is 5 Hz.
max_freq : 140.0  # Maximum frequency to test for resonances. The default is 133.33 Hz.
accel_per_hz : 75.0 # This parameter is used to determine which acceleration to use to test a specific frequency: accel = accel_per_hz * freq. Higher the value, the higher is the energy of the oscillations. Can be set to a lower than the default value if the resonances get too strong on the printer. However, lower values make measurements of high-frequency resonances less precise. The default value is 75 (mm/sec).
hz_per_sec : 1.0 # Determines the speed of the test. When testing all frequencies in range [min_freq, max_freq], each second the frequency increases by hz_per_sec. Small values make the test slow, and the large values will decrease the precision of the test. The default value is 1.0 (Hz/sec == sec^-2).
max_smoothing : 0.05  # Maximum input shaper smoothing to allow for each axis during shaper auto-calibration (with 'SHAPER_CALIBRATE' command). By default no maximum smoothing is specified. Refer to Measuring_Resonances guide for more details on using this feature.


[lis2dw X] # accel sensor HEAD=X at connector EXP2 = SPI1
spi_speed : 1000000 #SPI speed in Hz when communicating; default: 5000000
spi_bus : spi3a #spi2 if WiFi socket is being used
cs_pin: PA15 #EXP2_4; SPI enable pin for the sensor; if WiFi socket (=SPI2) is being used, try PC15 
axes_map : x,y,z #not 100% sure yet since chip is being mounted vertically at the head's PCB -> should it be "z,x,y" instead? Actually it seems to not matter.

[lis2dw Y] # accel sensor BED=Y at connector EXP2 = SPI1
spi_speed : 1000000 #SPI speed in Hz when communicating; default: 5000000
spi_bus : spi3a #spi2 if WiFi socket is being used
cs_pin: PD15 #EXP2_5; SPI enable pin for the sensor; if WiFi socket (=SPI2) is being used, try e.g. PC13
axes_map : x,y,z #not 100% sure yet -> should it be "y,x,z" instead? Actually it seems to not matter.

[input_shaper] # Set the correct values and shaper type according to your findings/measurements. 
shaper_freq_x: 65.0 
shaper_type_x: ei
shaper_freq_y: 43.2
shaper_type_y: mzv

#[bltouch]
#sensor_pin: PD13
#control_pin: PD12

## Proximity switch
#[probe]
#pin: PD8

#[output_pin ps_on_pin]
#pin: PD14

#[neopixel my_neopixel_1]
#pin: PD15

#[hall_filament_width_sensor]
#adc1: PC0
#adc2: PF10
[include moonraker_obico_macros.cfg]
